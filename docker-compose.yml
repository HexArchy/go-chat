version: "3.8"

services:
  auth-service:
    build:
      context: .
      dockerfile: internal/services/auth/Dockerfile
    environment:
      - AUTH_LOGGING_LEVEL=info
      - AUTH_ENGINES_STORAGE_URL=postgresql://gochatuser:gochatpass@postgres:5432/gochat?sslmode=disable
      - AUTH_VAULT_ADDRESS=http://vault:8200
      - AUTH_VAULT_TOKEN=my-vault-token
      - AUTH_HANDLERS_HTTP_ADDRESS=0.0.0.0
      - AUTH_HANDLERS_HTTP_PORT=8080
      - AUTH_ENGINES_STORAGE_MAX_OPEN_CONNS=10
      - AUTH_ENGINES_STORAGE_MAX_IDLE_CONNS=5
      - AUTH_ENGINES_STORAGE_CONN_MAX_LIFETIME=1h
      - AUTH_VAULT_PATH=secret/auth
      - AUTH_VAULT_TIMEOUT=5m
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      vault-setup:
        condition: service_completed_successfully

    ports:
      - "8080:8080"
      - "9090:9090"

  website-service:
    build:
      context: .
      dockerfile: internal/services/website/Dockerfile
    environment:
      - WEBSITE_LOGGING_LEVEL=info
      - WEBSITE_ENGINES_STORAGE_URL=postgresql://gochatuser:gochatpass@postgres:5432/gochat?sslmode=disable
      - WEBSITE_VAULT_ADDRESS=http://vault:8200
      - WEBSITE_VAULT_TOKEN=my-vault-token
      - WEBSITE_HANDLERS_HTTP_ADDRESS=0.0.0.0
      - WEBSITE_HANDLERS_HTTP_PORT=8081
      - WEBSITE_ENGINES_STORAGE_MAX_OPEN_CONNS=10
      - WEBSITE_ENGINES_STORAGE_MAX_IDLE_CONNS=5
      - WEBSITE_ENGINES_STORAGE_CONN_MAX_LIFETIME=1h
      - WEBSITE_VAULT_PATH=secret/website
      - WEBSITE_VAULT_TIMEOUT=5m
      - WEBSITE_AUTH_SERVICE_ADDRESS=http://auth-service:9090
    depends_on:
      website-migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      vault-setup:
        condition: service_completed_successfully

    ports:
      - "8081:8081"
      - "9091:9091"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=gochat
      - POSTGRES_USER=gochatuser
      - POSTGRES_PASSWORD=gochatpass
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gochatuser -d gochat"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  vault:
    image: vault:1.13.3
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: my-vault-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_UI: "true"
    command: server -dev -dev-root-token-id=my-vault-token
    ports:
      - "8200:8200"
    volumes:
      - vault-data:/vault/data

  vault-setup:
    image: vault:1.13.3
    environment:
      VAULT_ADDR: "http://vault:8200"
    entrypoint: >
      /bin/sh -c "
        sleep 10;
        vault login my-vault-token;
        vault kv put secret/auth access_secret=secret refresh_secret=secret service_token=secret;
      "

  migrate:
    build:
      context: .
      dockerfile: internal/services/auth/Dockerfile
    entrypoint: ["./migrate", "-config", "./configs/config.prod.yaml"]
    environment:
      - AUTH_ENGINES_STORAGE_URL=postgresql://gochatuser:gochatpass@postgres:5432/gochat?sslmode=disable
      - AUTH_VAULT_ADDRESS=http://vault:8200
      - AUTH_VAULT_TOKEN=my-vault-token
      - AUTH_VAULT_PATH=secret/auth
      - AUTH_VAULT_TIMEOUT=5m
      - AUTH_LOGGING_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      vault-setup:
        condition: service_completed_successfully

  website-migrate:
    build:
      context: .
      dockerfile: internal/services/website/Dockerfile
    entrypoint: ["./migrate", "-config", "./configs/config.prod.yaml"]
    environment:
      - WEBSITE_ENGINES_STORAGE_URL=postgresql://gochatuser:gochatpass@postgres:5432/gochat?sslmode=disable
      - WEBSITE_VAULT_ADDRESS=http://vault:8200
      - WEBSITE_VAULT_TOKEN=my-vault-token
      - WEBSITE_VAULT_PATH=secret/website
      - WEBSITE_VAULT_TIMEOUT=5m
      - WEBSITE_LOGGING_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      vault-setup:
        condition: service_completed_successfully

  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/swagger/auth.swagger.json
      - URLS[0].url=/swagger/auth.swagger.json
      - URLS[0].name=Auth API
      - URLS[1].url=/swagger/website.swagger.json
      - URLS[1].name=Website API
    volumes:
      - ./internal/api/generated/internal/api/proto/auth/auth.swagger.json:/swagger/auth.swagger.json
      - ./internal/api/generated/internal/api/proto/website/website.swagger.json:/swagger/website.swagger.json
    ports:
      - "8082:8080"

volumes:
  postgres-data:
  vault-data:
